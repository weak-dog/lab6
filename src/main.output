终端机在文法中未使用

    BOOL


状态 16 冲突：2 项偏移/归约
状态 36 冲突：1 项偏移/归约
状态 41 冲突：2 项偏移/归约
状态 42 冲突：1 项偏移/归约


语法

    0 $accept: statements $end

    1 statements: MAIN LP RP LB statements RB
    2           | statements statement
    3           | statement

    4 statement: block
    5          | decl_stmt
    6          | assign_stmt
    7          | if_stmt
    8          | for_stmt
    9          | while_stmt
   10          | jump_stmt
   11          | io_stmt
   12          | semi_stmt
   13          | expr

   14 semi_stmt: SEMICOLON

   15 block: LB statements RB

   16 decl_stmt: decl_stmt COMMA decl_assign_stmt
   17          | decl_stmt COMMA IDENTIFIER
   18          | T IDENTIFIER
   19          | T decl_assign_stmt

   20 decl_assign_stmt: IDENTIFIER ASSIGN expr

   21 assign_stmt: IDENTIFIER ASSIGN assign_stmt
   22            | IDENTIFIER ASSIGN expr
   23            | IDENTIFIER ADDASSIGN expr
   24            | IDENTIFIER SUBASSIGN expr
   25            | IDENTIFIER MULASSIGN expr
   26            | IDENTIFIER DIVASSIGN expr

   27 if_stmt: IF LP expr RP block ELSE block
   28        | IF LP expr RP block
   29        | IF LP expr RP block ELSE if_stmt

   30 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON statement RP block
   31         | FOR LP SEMICOLON expr SEMICOLON statement RP block
   32         | FOR LP decl_stmt SEMICOLON SEMICOLON statement RP block
   33         | FOR LP decl_stmt SEMICOLON expr SEMICOLON RP block
   34         | FOR LP decl_stmt SEMICOLON SEMICOLON RP block
   35         | FOR LP SEMICOLON expr SEMICOLON RP block
   36         | FOR LP SEMICOLON SEMICOLON statement RP block
   37         | FOR LP SEMICOLON SEMICOLON RP block

   38 while_stmt: WHILE LP expr RP block

   39 jump_stmt: BREAK
   40          | CONTINUE
   41          | RETURN expr

   42 io_stmt: PRINTF LP expr RP
   43        | PRINTF LP STRING COMMA expr RP
   44        | PRINTF LP STRING COMMA ADDR expr RP
   45        | PRINTF LP STRING RP
   46        | SCANF LP expr RP
   47        | SCANF LP STRING COMMA expr RP
   48        | SCANF LP STRING COMMA ADDR expr RP
   49        | SCANF LP STRING RP

   50 expr: LP expr RP
   51     | expr ADD expr
   52     | expr SUB expr
   53     | expr MUL expr
   54     | expr DIV expr
   55     | expr MOD expr
   56     | SUB expr
   57     | INC IDENTIFIER
   58     | IDENTIFIER INC
   59     | DEC IDENTIFIER
   60     | IDENTIFIER DEC
   61     | expr AND expr
   62     | expr OR expr
   63     | NOT expr
   64     | expr LT expr
   65     | expr GT expr
   66     | expr LE expr
   67     | expr GE expr
   68     | expr EQ expr
   69     | expr NEQ expr
   70     | TRUE
   71     | FALSE
   72     | IDENTIFIER
   73     | CHAR
   74     | INTEGER

   75 T: T_INT
   76  | T_CHAR
   77  | T_BOOL


终结语词，附有它们出现处的规则

    $end (0) 0
    error (256)
    T_CHAR (258) 76
    T_INT (259) 75
    T_BOOL (260) 77
    ADDR (261) 44 48
    SEMICOLON (262) 14 30 31 32 33 34 35 36 37
    COMMA (263) 16 17 43 44 47 48
    IF (264) 27 28 29
    ELSE (265) 27 29
    WHILE (266) 38
    FOR (267) 30 31 32 33 34 35 36 37
    RETURN (268) 41
    CONTINUE (269) 40
    BREAK (270) 39
    SCANF (271) 46 47 48 49
    PRINTF (272) 42 43 44 45
    MAIN (273) 1
    LP (274) 1 27 28 29 30 31 32 33 34 35 36 37 38 42 43 44 45 46 47 48 49 50
    RP (275) 1 27 28 29 30 31 32 33 34 35 36 37 38 42 43 44 45 46 47 48 49 50
    LB (276) 1 15
    RB (277) 1 15
    IDENTIFIER (278) 17 18 20 21 22 23 24 25 26 57 58 59 60 72
    INTEGER (279) 74
    CHAR (280) 73
    BOOL (281)
    STRING (282) 43 44 45 47 48 49
    TRUE (283) 70
    FALSE (284) 71
    ASSIGN (285) 20 21 22
    ADDASSIGN (286) 23
    SUBASSIGN (287) 24
    MULASSIGN (288) 25
    DIVASSIGN (289) 26
    OR (290) 62
    AND (291) 61
    LT (292) 64
    GT (293) 65
    LE (294) 66
    GE (295) 67
    EQ (296) 68
    NEQ (297) 69
    ADD (298) 51
    SUB (299) 52 56
    MUL (300) 53
    DIV (301) 54
    MOD (302) 55
    NOT (303) 63
    INC (304) 57 58
    DEC (305) 59 60
    MINUS (306)


非终结语词，附有它们出现处的规则

    $accept (52)
        on left: 0
    statements (53)
        on left: 1 2 3
        on right: 0 1 2 15
    statement (54)
        on left: 4 5 6 7 8 9 10 11 12 13
        on right: 2 3 30 31 32 36
    semi_stmt (55)
        on left: 14
        on right: 12
    block (56)
        on left: 15
        on right: 4 27 28 29 30 31 32 33 34 35 36 37 38
    decl_stmt (57)
        on left: 16 17 18 19
        on right: 5 16 17 30 32 33 34
    decl_assign_stmt (58)
        on left: 20
        on right: 16 19
    assign_stmt (59)
        on left: 21 22 23 24 25 26
        on right: 6 21
    if_stmt (60)
        on left: 27 28 29
        on right: 7 29
    for_stmt (61)
        on left: 30 31 32 33 34 35 36 37
        on right: 8
    while_stmt (62)
        on left: 38
        on right: 9
    jump_stmt (63)
        on left: 39 40 41
        on right: 10
    io_stmt (64)
        on left: 42 43 44 45 46 47 48 49
        on right: 11
    expr (65)
        on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
        on right: 13 20 22 23 24 25 26 27 28 29 30 31 33 35 38 41 42 43 44 46 47 48 50 51 52 53 54 55 56 61 62 63 64 65 66 67 68 69
    T (66)
        on left: 75 76 77
        on right: 18 19


状态 0

    0 $accept: . statements $end

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 25
    statement    转到状态 26
    semi_stmt    转到状态 27
    block        转到状态 28
    decl_stmt    转到状态 29
    assign_stmt  转到状态 30
    if_stmt      转到状态 31
    for_stmt     转到状态 32
    while_stmt   转到状态 33
    jump_stmt    转到状态 34
    io_stmt      转到状态 35
    expr         转到状态 36
    T            转到状态 37


状态 1

   76 T: T_CHAR .

    $default  使用规则 76 以归约 (T)


状态 2

   75 T: T_INT .

    $default  使用规则 75 以归约 (T)


状态 3

   77 T: T_BOOL .

    $default  使用规则 77 以归约 (T)


状态 4

   14 semi_stmt: SEMICOLON .

    $default  使用规则 14 以归约 (semi_stmt)


状态 5

   27 if_stmt: IF . LP expr RP block ELSE block
   28        | IF . LP expr RP block
   29        | IF . LP expr RP block ELSE if_stmt

    LP  偏移，并进入状态 38


状态 6

   38 while_stmt: WHILE . LP expr RP block

    LP  偏移，并进入状态 39


状态 7

   30 for_stmt: FOR . LP decl_stmt SEMICOLON expr SEMICOLON statement RP block
   31         | FOR . LP SEMICOLON expr SEMICOLON statement RP block
   32         | FOR . LP decl_stmt SEMICOLON SEMICOLON statement RP block
   33         | FOR . LP decl_stmt SEMICOLON expr SEMICOLON RP block
   34         | FOR . LP decl_stmt SEMICOLON SEMICOLON RP block
   35         | FOR . LP SEMICOLON expr SEMICOLON RP block
   36         | FOR . LP SEMICOLON SEMICOLON statement RP block
   37         | FOR . LP SEMICOLON SEMICOLON RP block

    LP  偏移，并进入状态 40


状态 8

   41 jump_stmt: RETURN . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 42


状态 9

   40 jump_stmt: CONTINUE .

    $default  使用规则 40 以归约 (jump_stmt)


状态 10

   39 jump_stmt: BREAK .

    $default  使用规则 39 以归约 (jump_stmt)


状态 11

   46 io_stmt: SCANF . LP expr RP
   47        | SCANF . LP STRING COMMA expr RP
   48        | SCANF . LP STRING COMMA ADDR expr RP
   49        | SCANF . LP STRING RP

    LP  偏移，并进入状态 43


状态 12

   42 io_stmt: PRINTF . LP expr RP
   43        | PRINTF . LP STRING COMMA expr RP
   44        | PRINTF . LP STRING COMMA ADDR expr RP
   45        | PRINTF . LP STRING RP

    LP  偏移，并进入状态 44


状态 13

    1 statements: MAIN . LP RP LB statements RB

    LP  偏移，并进入状态 45


状态 14

   50 expr: LP . expr RP

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 46


状态 15

   15 block: LB . statements RB

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 47
    statement    转到状态 26
    semi_stmt    转到状态 27
    block        转到状态 28
    decl_stmt    转到状态 29
    assign_stmt  转到状态 30
    if_stmt      转到状态 31
    for_stmt     转到状态 32
    while_stmt   转到状态 33
    jump_stmt    转到状态 34
    io_stmt      转到状态 35
    expr         转到状态 36
    T            转到状态 37


状态 16

   21 assign_stmt: IDENTIFIER . ASSIGN assign_stmt
   22            | IDENTIFIER . ASSIGN expr
   23            | IDENTIFIER . ADDASSIGN expr
   24            | IDENTIFIER . SUBASSIGN expr
   25            | IDENTIFIER . MULASSIGN expr
   26            | IDENTIFIER . DIVASSIGN expr
   58 expr: IDENTIFIER . INC
   60     | IDENTIFIER . DEC
   72     | IDENTIFIER .

    ASSIGN     偏移，并进入状态 48
    ADDASSIGN  偏移，并进入状态 49
    SUBASSIGN  偏移，并进入状态 50
    MULASSIGN  偏移，并进入状态 51
    DIVASSIGN  偏移，并进入状态 52
    INC        偏移，并进入状态 53
    DEC        偏移，并进入状态 54

    INC       [使用规则 72 以归约 (expr)]
    DEC       [使用规则 72 以归约 (expr)]
    $default  使用规则 72 以归约 (expr)


状态 17

   74 expr: INTEGER .

    $default  使用规则 74 以归约 (expr)


状态 18

   73 expr: CHAR .

    $default  使用规则 73 以归约 (expr)


状态 19

   70 expr: TRUE .

    $default  使用规则 70 以归约 (expr)


状态 20

   71 expr: FALSE .

    $default  使用规则 71 以归约 (expr)


状态 21

   56 expr: SUB . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 55


状态 22

   63 expr: NOT . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 56


状态 23

   57 expr: INC . IDENTIFIER

    IDENTIFIER  偏移，并进入状态 57


状态 24

   59 expr: DEC . IDENTIFIER

    IDENTIFIER  偏移，并进入状态 58


状态 25

    0 $accept: statements . $end
    2 statements: statements . statement

    $end        偏移，并进入状态 59
    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statement    转到状态 60
    semi_stmt    转到状态 27
    block        转到状态 28
    decl_stmt    转到状态 29
    assign_stmt  转到状态 30
    if_stmt      转到状态 31
    for_stmt     转到状态 32
    while_stmt   转到状态 33
    jump_stmt    转到状态 34
    io_stmt      转到状态 35
    expr         转到状态 36
    T            转到状态 37


状态 26

    3 statements: statement .

    $default  使用规则 3 以归约 (statements)


状态 27

   12 statement: semi_stmt .

    $default  使用规则 12 以归约 (statement)


状态 28

    4 statement: block .

    $default  使用规则 4 以归约 (statement)


状态 29

    5 statement: decl_stmt .
   16 decl_stmt: decl_stmt . COMMA decl_assign_stmt
   17          | decl_stmt . COMMA IDENTIFIER

    COMMA  偏移，并进入状态 61

    $default  使用规则 5 以归约 (statement)


状态 30

    6 statement: assign_stmt .

    $default  使用规则 6 以归约 (statement)


状态 31

    7 statement: if_stmt .

    $default  使用规则 7 以归约 (statement)


状态 32

    8 statement: for_stmt .

    $default  使用规则 8 以归约 (statement)


状态 33

    9 statement: while_stmt .

    $default  使用规则 9 以归约 (statement)


状态 34

   10 statement: jump_stmt .

    $default  使用规则 10 以归约 (statement)


状态 35

   11 statement: io_stmt .

    $default  使用规则 11 以归约 (statement)


状态 36

   13 statement: expr .
   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    OR   偏移，并进入状态 62
    AND  偏移，并进入状态 63
    LT   偏移，并进入状态 64
    GT   偏移，并进入状态 65
    LE   偏移，并进入状态 66
    GE   偏移，并进入状态 67
    EQ   偏移，并进入状态 68
    NEQ  偏移，并进入状态 69
    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74

    SUB       [使用规则 13 以归约 (statement)]
    $default  使用规则 13 以归约 (statement)


状态 37

   18 decl_stmt: T . IDENTIFIER
   19          | T . decl_assign_stmt

    IDENTIFIER  偏移，并进入状态 75

    decl_assign_stmt  转到状态 76


状态 38

   27 if_stmt: IF LP . expr RP block ELSE block
   28        | IF LP . expr RP block
   29        | IF LP . expr RP block ELSE if_stmt

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 77


状态 39

   38 while_stmt: WHILE LP . expr RP block

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 78


状态 40

   30 for_stmt: FOR LP . decl_stmt SEMICOLON expr SEMICOLON statement RP block
   31         | FOR LP . SEMICOLON expr SEMICOLON statement RP block
   32         | FOR LP . decl_stmt SEMICOLON SEMICOLON statement RP block
   33         | FOR LP . decl_stmt SEMICOLON expr SEMICOLON RP block
   34         | FOR LP . decl_stmt SEMICOLON SEMICOLON RP block
   35         | FOR LP . SEMICOLON expr SEMICOLON RP block
   36         | FOR LP . SEMICOLON SEMICOLON statement RP block
   37         | FOR LP . SEMICOLON SEMICOLON RP block

    T_CHAR     偏移，并进入状态 1
    T_INT      偏移，并进入状态 2
    T_BOOL     偏移，并进入状态 3
    SEMICOLON  偏移，并进入状态 79

    decl_stmt  转到状态 80
    T          转到状态 37


状态 41

   58 expr: IDENTIFIER . INC
   60     | IDENTIFIER . DEC
   72     | IDENTIFIER .

    INC  偏移，并进入状态 53
    DEC  偏移，并进入状态 54

    INC       [使用规则 72 以归约 (expr)]
    DEC       [使用规则 72 以归约 (expr)]
    $default  使用规则 72 以归约 (expr)


状态 42

   41 jump_stmt: RETURN expr .
   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    OR   偏移，并进入状态 62
    AND  偏移，并进入状态 63
    LT   偏移，并进入状态 64
    GT   偏移，并进入状态 65
    LE   偏移，并进入状态 66
    GE   偏移，并进入状态 67
    EQ   偏移，并进入状态 68
    NEQ  偏移，并进入状态 69
    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74

    SUB       [使用规则 41 以归约 (jump_stmt)]
    $default  使用规则 41 以归约 (jump_stmt)


状态 43

   46 io_stmt: SCANF LP . expr RP
   47        | SCANF LP . STRING COMMA expr RP
   48        | SCANF LP . STRING COMMA ADDR expr RP
   49        | SCANF LP . STRING RP

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    STRING      偏移，并进入状态 81
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 82


状态 44

   42 io_stmt: PRINTF LP . expr RP
   43        | PRINTF LP . STRING COMMA expr RP
   44        | PRINTF LP . STRING COMMA ADDR expr RP
   45        | PRINTF LP . STRING RP

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    STRING      偏移，并进入状态 83
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 84


状态 45

    1 statements: MAIN LP . RP LB statements RB

    RP  偏移，并进入状态 85


状态 46

   50 expr: LP expr . RP
   51     | expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    RP   偏移，并进入状态 86
    OR   偏移，并进入状态 62
    AND  偏移，并进入状态 63
    LT   偏移，并进入状态 64
    GT   偏移，并进入状态 65
    LE   偏移，并进入状态 66
    GE   偏移，并进入状态 67
    EQ   偏移，并进入状态 68
    NEQ  偏移，并进入状态 69
    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74


状态 47

    2 statements: statements . statement
   15 block: LB statements . RB

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    RB          偏移，并进入状态 87
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statement    转到状态 60
    semi_stmt    转到状态 27
    block        转到状态 28
    decl_stmt    转到状态 29
    assign_stmt  转到状态 30
    if_stmt      转到状态 31
    for_stmt     转到状态 32
    while_stmt   转到状态 33
    jump_stmt    转到状态 34
    io_stmt      转到状态 35
    expr         转到状态 36
    T            转到状态 37


状态 48

   21 assign_stmt: IDENTIFIER ASSIGN . assign_stmt
   22            | IDENTIFIER ASSIGN . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    assign_stmt  转到状态 88
    expr         转到状态 89


状态 49

   23 assign_stmt: IDENTIFIER ADDASSIGN . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 90


状态 50

   24 assign_stmt: IDENTIFIER SUBASSIGN . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 91


状态 51

   25 assign_stmt: IDENTIFIER MULASSIGN . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 92


状态 52

   26 assign_stmt: IDENTIFIER DIVASSIGN . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 93


状态 53

   58 expr: IDENTIFIER INC .

    $default  使用规则 58 以归约 (expr)


状态 54

   60 expr: IDENTIFIER DEC .

    $default  使用规则 60 以归约 (expr)


状态 55

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   56     | SUB expr .
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    $default  使用规则 56 以归约 (expr)


状态 56

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | NOT expr .
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    $default  使用规则 63 以归约 (expr)


状态 57

   57 expr: INC IDENTIFIER .

    $default  使用规则 57 以归约 (expr)


状态 58

   59 expr: DEC IDENTIFIER .

    $default  使用规则 59 以归约 (expr)


状态 59

    0 $accept: statements $end .

    $default  接受


状态 60

    2 statements: statements statement .

    $default  使用规则 2 以归约 (statements)


状态 61

   16 decl_stmt: decl_stmt COMMA . decl_assign_stmt
   17          | decl_stmt COMMA . IDENTIFIER

    IDENTIFIER  偏移，并进入状态 94

    decl_assign_stmt  转到状态 95


状态 62

   62 expr: expr OR . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 96


状态 63

   61 expr: expr AND . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 97


状态 64

   64 expr: expr LT . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 98


状态 65

   65 expr: expr GT . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 99


状态 66

   66 expr: expr LE . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 100


状态 67

   67 expr: expr GE . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 101


状态 68

   68 expr: expr EQ . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 102


状态 69

   69 expr: expr NEQ . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 103


状态 70

   51 expr: expr ADD . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 104


状态 71

   52 expr: expr SUB . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 105


状态 72

   53 expr: expr MUL . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 106


状态 73

   54 expr: expr DIV . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 107


状态 74

   55 expr: expr MOD . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 108


状态 75

   18 decl_stmt: T IDENTIFIER .
   20 decl_assign_stmt: IDENTIFIER . ASSIGN expr

    ASSIGN  偏移，并进入状态 109

    $default  使用规则 18 以归约 (decl_stmt)


状态 76

   19 decl_stmt: T decl_assign_stmt .

    $default  使用规则 19 以归约 (decl_stmt)


状态 77

   27 if_stmt: IF LP expr . RP block ELSE block
   28        | IF LP expr . RP block
   29        | IF LP expr . RP block ELSE if_stmt
   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    RP   偏移，并进入状态 110
    OR   偏移，并进入状态 62
    AND  偏移，并进入状态 63
    LT   偏移，并进入状态 64
    GT   偏移，并进入状态 65
    LE   偏移，并进入状态 66
    GE   偏移，并进入状态 67
    EQ   偏移，并进入状态 68
    NEQ  偏移，并进入状态 69
    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74


状态 78

   38 while_stmt: WHILE LP expr . RP block
   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    RP   偏移，并进入状态 111
    OR   偏移，并进入状态 62
    AND  偏移，并进入状态 63
    LT   偏移，并进入状态 64
    GT   偏移，并进入状态 65
    LE   偏移，并进入状态 66
    GE   偏移，并进入状态 67
    EQ   偏移，并进入状态 68
    NEQ  偏移，并进入状态 69
    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74


状态 79

   31 for_stmt: FOR LP SEMICOLON . expr SEMICOLON statement RP block
   35         | FOR LP SEMICOLON . expr SEMICOLON RP block
   36         | FOR LP SEMICOLON . SEMICOLON statement RP block
   37         | FOR LP SEMICOLON . SEMICOLON RP block

    SEMICOLON   偏移，并进入状态 112
    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 113


状态 80

   16 decl_stmt: decl_stmt . COMMA decl_assign_stmt
   17          | decl_stmt . COMMA IDENTIFIER
   30 for_stmt: FOR LP decl_stmt . SEMICOLON expr SEMICOLON statement RP block
   32         | FOR LP decl_stmt . SEMICOLON SEMICOLON statement RP block
   33         | FOR LP decl_stmt . SEMICOLON expr SEMICOLON RP block
   34         | FOR LP decl_stmt . SEMICOLON SEMICOLON RP block

    SEMICOLON  偏移，并进入状态 114
    COMMA      偏移，并进入状态 61


状态 81

   47 io_stmt: SCANF LP STRING . COMMA expr RP
   48        | SCANF LP STRING . COMMA ADDR expr RP
   49        | SCANF LP STRING . RP

    COMMA  偏移，并进入状态 115
    RP     偏移，并进入状态 116


状态 82

   46 io_stmt: SCANF LP expr . RP
   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    RP   偏移，并进入状态 117
    OR   偏移，并进入状态 62
    AND  偏移，并进入状态 63
    LT   偏移，并进入状态 64
    GT   偏移，并进入状态 65
    LE   偏移，并进入状态 66
    GE   偏移，并进入状态 67
    EQ   偏移，并进入状态 68
    NEQ  偏移，并进入状态 69
    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74


状态 83

   43 io_stmt: PRINTF LP STRING . COMMA expr RP
   44        | PRINTF LP STRING . COMMA ADDR expr RP
   45        | PRINTF LP STRING . RP

    COMMA  偏移，并进入状态 118
    RP     偏移，并进入状态 119


状态 84

   42 io_stmt: PRINTF LP expr . RP
   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    RP   偏移，并进入状态 120
    OR   偏移，并进入状态 62
    AND  偏移，并进入状态 63
    LT   偏移，并进入状态 64
    GT   偏移，并进入状态 65
    LE   偏移，并进入状态 66
    GE   偏移，并进入状态 67
    EQ   偏移，并进入状态 68
    NEQ  偏移，并进入状态 69
    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74


状态 85

    1 statements: MAIN LP RP . LB statements RB

    LB  偏移，并进入状态 121


状态 86

   50 expr: LP expr RP .

    $default  使用规则 50 以归约 (expr)


状态 87

   15 block: LB statements RB .

    $default  使用规则 15 以归约 (block)


状态 88

   21 assign_stmt: IDENTIFIER ASSIGN assign_stmt .

    $default  使用规则 21 以归约 (assign_stmt)


状态 89

   22 assign_stmt: IDENTIFIER ASSIGN expr .
   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    OR   偏移，并进入状态 62
    AND  偏移，并进入状态 63
    LT   偏移，并进入状态 64
    GT   偏移，并进入状态 65
    LE   偏移，并进入状态 66
    GE   偏移，并进入状态 67
    EQ   偏移，并进入状态 68
    NEQ  偏移，并进入状态 69
    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74

    $default  使用规则 22 以归约 (assign_stmt)


状态 90

   23 assign_stmt: IDENTIFIER ADDASSIGN expr .
   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    OR   偏移，并进入状态 62
    AND  偏移，并进入状态 63
    LT   偏移，并进入状态 64
    GT   偏移，并进入状态 65
    LE   偏移，并进入状态 66
    GE   偏移，并进入状态 67
    EQ   偏移，并进入状态 68
    NEQ  偏移，并进入状态 69
    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74

    $default  使用规则 23 以归约 (assign_stmt)


状态 91

   24 assign_stmt: IDENTIFIER SUBASSIGN expr .
   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    OR   偏移，并进入状态 62
    AND  偏移，并进入状态 63
    LT   偏移，并进入状态 64
    GT   偏移，并进入状态 65
    LE   偏移，并进入状态 66
    GE   偏移，并进入状态 67
    EQ   偏移，并进入状态 68
    NEQ  偏移，并进入状态 69
    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74

    $default  使用规则 24 以归约 (assign_stmt)


状态 92

   25 assign_stmt: IDENTIFIER MULASSIGN expr .
   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    OR   偏移，并进入状态 62
    AND  偏移，并进入状态 63
    LT   偏移，并进入状态 64
    GT   偏移，并进入状态 65
    LE   偏移，并进入状态 66
    GE   偏移，并进入状态 67
    EQ   偏移，并进入状态 68
    NEQ  偏移，并进入状态 69
    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74

    $default  使用规则 25 以归约 (assign_stmt)


状态 93

   26 assign_stmt: IDENTIFIER DIVASSIGN expr .
   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    OR   偏移，并进入状态 62
    AND  偏移，并进入状态 63
    LT   偏移，并进入状态 64
    GT   偏移，并进入状态 65
    LE   偏移，并进入状态 66
    GE   偏移，并进入状态 67
    EQ   偏移，并进入状态 68
    NEQ  偏移，并进入状态 69
    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74

    $default  使用规则 26 以归约 (assign_stmt)


状态 94

   17 decl_stmt: decl_stmt COMMA IDENTIFIER .
   20 decl_assign_stmt: IDENTIFIER . ASSIGN expr

    ASSIGN  偏移，并进入状态 109

    $default  使用规则 17 以归约 (decl_stmt)


状态 95

   16 decl_stmt: decl_stmt COMMA decl_assign_stmt .

    $default  使用规则 16 以归约 (decl_stmt)


状态 96

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   62     | expr OR expr .
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    AND  偏移，并进入状态 63
    LT   偏移，并进入状态 64
    GT   偏移，并进入状态 65
    LE   偏移，并进入状态 66
    GE   偏移，并进入状态 67
    EQ   偏移，并进入状态 68
    NEQ  偏移，并进入状态 69
    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74

    $default  使用规则 62 以归约 (expr)


状态 97

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   61     | expr AND expr .
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    LT   偏移，并进入状态 64
    GT   偏移，并进入状态 65
    LE   偏移，并进入状态 66
    GE   偏移，并进入状态 67
    EQ   偏移，并进入状态 68
    NEQ  偏移，并进入状态 69
    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74

    $default  使用规则 61 以归约 (expr)


状态 98

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   64     | expr LT expr .
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74

    $default  使用规则 64 以归约 (expr)


状态 99

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   65     | expr GT expr .
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74

    $default  使用规则 65 以归约 (expr)


状态 100

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   66     | expr LE expr .
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74

    $default  使用规则 66 以归约 (expr)


状态 101

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   67     | expr GE expr .
   68     | expr . EQ expr
   69     | expr . NEQ expr

    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74

    $default  使用规则 67 以归约 (expr)


状态 102

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   68     | expr EQ expr .
   69     | expr . NEQ expr

    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74

    $default  使用规则 68 以归约 (expr)


状态 103

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr
   69     | expr NEQ expr .

    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74

    $default  使用规则 69 以归约 (expr)


状态 104

   51 expr: expr . ADD expr
   51     | expr ADD expr .
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74

    $default  使用规则 51 以归约 (expr)


状态 105

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   52     | expr SUB expr .
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74

    $default  使用规则 52 以归约 (expr)


状态 106

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   53     | expr MUL expr .
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    $default  使用规则 53 以归约 (expr)


状态 107

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   54     | expr DIV expr .
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    $default  使用规则 54 以归约 (expr)


状态 108

   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   55     | expr MOD expr .
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    $default  使用规则 55 以归约 (expr)


状态 109

   20 decl_assign_stmt: IDENTIFIER ASSIGN . expr

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 122


状态 110

   27 if_stmt: IF LP expr RP . block ELSE block
   28        | IF LP expr RP . block
   29        | IF LP expr RP . block ELSE if_stmt

    LB  偏移，并进入状态 15

    block  转到状态 123


状态 111

   38 while_stmt: WHILE LP expr RP . block

    LB  偏移，并进入状态 15

    block  转到状态 124


状态 112

   36 for_stmt: FOR LP SEMICOLON SEMICOLON . statement RP block
   37         | FOR LP SEMICOLON SEMICOLON . RP block

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    RP          偏移，并进入状态 125
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statement    转到状态 126
    semi_stmt    转到状态 27
    block        转到状态 28
    decl_stmt    转到状态 29
    assign_stmt  转到状态 30
    if_stmt      转到状态 31
    for_stmt     转到状态 32
    while_stmt   转到状态 33
    jump_stmt    转到状态 34
    io_stmt      转到状态 35
    expr         转到状态 36
    T            转到状态 37


状态 113

   31 for_stmt: FOR LP SEMICOLON expr . SEMICOLON statement RP block
   35         | FOR LP SEMICOLON expr . SEMICOLON RP block
   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    SEMICOLON  偏移，并进入状态 127
    OR         偏移，并进入状态 62
    AND        偏移，并进入状态 63
    LT         偏移，并进入状态 64
    GT         偏移，并进入状态 65
    LE         偏移，并进入状态 66
    GE         偏移，并进入状态 67
    EQ         偏移，并进入状态 68
    NEQ        偏移，并进入状态 69
    ADD        偏移，并进入状态 70
    SUB        偏移，并进入状态 71
    MUL        偏移，并进入状态 72
    DIV        偏移，并进入状态 73
    MOD        偏移，并进入状态 74


状态 114

   30 for_stmt: FOR LP decl_stmt SEMICOLON . expr SEMICOLON statement RP block
   32         | FOR LP decl_stmt SEMICOLON . SEMICOLON statement RP block
   33         | FOR LP decl_stmt SEMICOLON . expr SEMICOLON RP block
   34         | FOR LP decl_stmt SEMICOLON . SEMICOLON RP block

    SEMICOLON   偏移，并进入状态 128
    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 129


状态 115

   47 io_stmt: SCANF LP STRING COMMA . expr RP
   48        | SCANF LP STRING COMMA . ADDR expr RP

    ADDR        偏移，并进入状态 130
    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 131


状态 116

   49 io_stmt: SCANF LP STRING RP .

    $default  使用规则 49 以归约 (io_stmt)


状态 117

   46 io_stmt: SCANF LP expr RP .

    $default  使用规则 46 以归约 (io_stmt)


状态 118

   43 io_stmt: PRINTF LP STRING COMMA . expr RP
   44        | PRINTF LP STRING COMMA . ADDR expr RP

    ADDR        偏移，并进入状态 132
    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 133


状态 119

   45 io_stmt: PRINTF LP STRING RP .

    $default  使用规则 45 以归约 (io_stmt)


状态 120

   42 io_stmt: PRINTF LP expr RP .

    $default  使用规则 42 以归约 (io_stmt)


状态 121

    1 statements: MAIN LP RP LB . statements RB

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    MAIN        偏移，并进入状态 13
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statements   转到状态 134
    statement    转到状态 26
    semi_stmt    转到状态 27
    block        转到状态 28
    decl_stmt    转到状态 29
    assign_stmt  转到状态 30
    if_stmt      转到状态 31
    for_stmt     转到状态 32
    while_stmt   转到状态 33
    jump_stmt    转到状态 34
    io_stmt      转到状态 35
    expr         转到状态 36
    T            转到状态 37


状态 122

   20 decl_assign_stmt: IDENTIFIER ASSIGN expr .
   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    OR   偏移，并进入状态 62
    AND  偏移，并进入状态 63
    LT   偏移，并进入状态 64
    GT   偏移，并进入状态 65
    LE   偏移，并进入状态 66
    GE   偏移，并进入状态 67
    EQ   偏移，并进入状态 68
    NEQ  偏移，并进入状态 69
    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74

    $default  使用规则 20 以归约 (decl_assign_stmt)


状态 123

   27 if_stmt: IF LP expr RP block . ELSE block
   28        | IF LP expr RP block .
   29        | IF LP expr RP block . ELSE if_stmt

    ELSE  偏移，并进入状态 135

    $default  使用规则 28 以归约 (if_stmt)


状态 124

   38 while_stmt: WHILE LP expr RP block .

    $default  使用规则 38 以归约 (while_stmt)


状态 125

   37 for_stmt: FOR LP SEMICOLON SEMICOLON RP . block

    LB  偏移，并进入状态 15

    block  转到状态 136


状态 126

   36 for_stmt: FOR LP SEMICOLON SEMICOLON statement . RP block

    RP  偏移，并进入状态 137


状态 127

   31 for_stmt: FOR LP SEMICOLON expr SEMICOLON . statement RP block
   35         | FOR LP SEMICOLON expr SEMICOLON . RP block

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    RP          偏移，并进入状态 138
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statement    转到状态 139
    semi_stmt    转到状态 27
    block        转到状态 28
    decl_stmt    转到状态 29
    assign_stmt  转到状态 30
    if_stmt      转到状态 31
    for_stmt     转到状态 32
    while_stmt   转到状态 33
    jump_stmt    转到状态 34
    io_stmt      转到状态 35
    expr         转到状态 36
    T            转到状态 37


状态 128

   32 for_stmt: FOR LP decl_stmt SEMICOLON SEMICOLON . statement RP block
   34         | FOR LP decl_stmt SEMICOLON SEMICOLON . RP block

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    RP          偏移，并进入状态 140
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statement    转到状态 141
    semi_stmt    转到状态 27
    block        转到状态 28
    decl_stmt    转到状态 29
    assign_stmt  转到状态 30
    if_stmt      转到状态 31
    for_stmt     转到状态 32
    while_stmt   转到状态 33
    jump_stmt    转到状态 34
    io_stmt      转到状态 35
    expr         转到状态 36
    T            转到状态 37


状态 129

   30 for_stmt: FOR LP decl_stmt SEMICOLON expr . SEMICOLON statement RP block
   33         | FOR LP decl_stmt SEMICOLON expr . SEMICOLON RP block
   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    SEMICOLON  偏移，并进入状态 142
    OR         偏移，并进入状态 62
    AND        偏移，并进入状态 63
    LT         偏移，并进入状态 64
    GT         偏移，并进入状态 65
    LE         偏移，并进入状态 66
    GE         偏移，并进入状态 67
    EQ         偏移，并进入状态 68
    NEQ        偏移，并进入状态 69
    ADD        偏移，并进入状态 70
    SUB        偏移，并进入状态 71
    MUL        偏移，并进入状态 72
    DIV        偏移，并进入状态 73
    MOD        偏移，并进入状态 74


状态 130

   48 io_stmt: SCANF LP STRING COMMA ADDR . expr RP

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 143


状态 131

   47 io_stmt: SCANF LP STRING COMMA expr . RP
   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    RP   偏移，并进入状态 144
    OR   偏移，并进入状态 62
    AND  偏移，并进入状态 63
    LT   偏移，并进入状态 64
    GT   偏移，并进入状态 65
    LE   偏移，并进入状态 66
    GE   偏移，并进入状态 67
    EQ   偏移，并进入状态 68
    NEQ  偏移，并进入状态 69
    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74


状态 132

   44 io_stmt: PRINTF LP STRING COMMA ADDR . expr RP

    LP          偏移，并进入状态 14
    IDENTIFIER  偏移，并进入状态 41
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    expr  转到状态 145


状态 133

   43 io_stmt: PRINTF LP STRING COMMA expr . RP
   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    RP   偏移，并进入状态 146
    OR   偏移，并进入状态 62
    AND  偏移，并进入状态 63
    LT   偏移，并进入状态 64
    GT   偏移，并进入状态 65
    LE   偏移，并进入状态 66
    GE   偏移，并进入状态 67
    EQ   偏移，并进入状态 68
    NEQ  偏移，并进入状态 69
    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74


状态 134

    1 statements: MAIN LP RP LB statements . RB
    2           | statements . statement

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    LB          偏移，并进入状态 15
    RB          偏移，并进入状态 147
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statement    转到状态 60
    semi_stmt    转到状态 27
    block        转到状态 28
    decl_stmt    转到状态 29
    assign_stmt  转到状态 30
    if_stmt      转到状态 31
    for_stmt     转到状态 32
    while_stmt   转到状态 33
    jump_stmt    转到状态 34
    io_stmt      转到状态 35
    expr         转到状态 36
    T            转到状态 37


状态 135

   27 if_stmt: IF LP expr RP block ELSE . block
   29        | IF LP expr RP block ELSE . if_stmt

    IF  偏移，并进入状态 5
    LB  偏移，并进入状态 15

    block    转到状态 148
    if_stmt  转到状态 149


状态 136

   37 for_stmt: FOR LP SEMICOLON SEMICOLON RP block .

    $default  使用规则 37 以归约 (for_stmt)


状态 137

   36 for_stmt: FOR LP SEMICOLON SEMICOLON statement RP . block

    LB  偏移，并进入状态 15

    block  转到状态 150


状态 138

   35 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP . block

    LB  偏移，并进入状态 15

    block  转到状态 151


状态 139

   31 for_stmt: FOR LP SEMICOLON expr SEMICOLON statement . RP block

    RP  偏移，并进入状态 152


状态 140

   34 for_stmt: FOR LP decl_stmt SEMICOLON SEMICOLON RP . block

    LB  偏移，并进入状态 15

    block  转到状态 153


状态 141

   32 for_stmt: FOR LP decl_stmt SEMICOLON SEMICOLON statement . RP block

    RP  偏移，并进入状态 154


状态 142

   30 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON . statement RP block
   33         | FOR LP decl_stmt SEMICOLON expr SEMICOLON . RP block

    T_CHAR      偏移，并进入状态 1
    T_INT       偏移，并进入状态 2
    T_BOOL      偏移，并进入状态 3
    SEMICOLON   偏移，并进入状态 4
    IF          偏移，并进入状态 5
    WHILE       偏移，并进入状态 6
    FOR         偏移，并进入状态 7
    RETURN      偏移，并进入状态 8
    CONTINUE    偏移，并进入状态 9
    BREAK       偏移，并进入状态 10
    SCANF       偏移，并进入状态 11
    PRINTF      偏移，并进入状态 12
    LP          偏移，并进入状态 14
    RP          偏移，并进入状态 155
    LB          偏移，并进入状态 15
    IDENTIFIER  偏移，并进入状态 16
    INTEGER     偏移，并进入状态 17
    CHAR        偏移，并进入状态 18
    TRUE        偏移，并进入状态 19
    FALSE       偏移，并进入状态 20
    SUB         偏移，并进入状态 21
    NOT         偏移，并进入状态 22
    INC         偏移，并进入状态 23
    DEC         偏移，并进入状态 24

    statement    转到状态 156
    semi_stmt    转到状态 27
    block        转到状态 28
    decl_stmt    转到状态 29
    assign_stmt  转到状态 30
    if_stmt      转到状态 31
    for_stmt     转到状态 32
    while_stmt   转到状态 33
    jump_stmt    转到状态 34
    io_stmt      转到状态 35
    expr         转到状态 36
    T            转到状态 37


状态 143

   48 io_stmt: SCANF LP STRING COMMA ADDR expr . RP
   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    RP   偏移，并进入状态 157
    OR   偏移，并进入状态 62
    AND  偏移，并进入状态 63
    LT   偏移，并进入状态 64
    GT   偏移，并进入状态 65
    LE   偏移，并进入状态 66
    GE   偏移，并进入状态 67
    EQ   偏移，并进入状态 68
    NEQ  偏移，并进入状态 69
    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74


状态 144

   47 io_stmt: SCANF LP STRING COMMA expr RP .

    $default  使用规则 47 以归约 (io_stmt)


状态 145

   44 io_stmt: PRINTF LP STRING COMMA ADDR expr . RP
   51 expr: expr . ADD expr
   52     | expr . SUB expr
   53     | expr . MUL expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   61     | expr . AND expr
   62     | expr . OR expr
   64     | expr . LT expr
   65     | expr . GT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . EQ expr
   69     | expr . NEQ expr

    RP   偏移，并进入状态 158
    OR   偏移，并进入状态 62
    AND  偏移，并进入状态 63
    LT   偏移，并进入状态 64
    GT   偏移，并进入状态 65
    LE   偏移，并进入状态 66
    GE   偏移，并进入状态 67
    EQ   偏移，并进入状态 68
    NEQ  偏移，并进入状态 69
    ADD  偏移，并进入状态 70
    SUB  偏移，并进入状态 71
    MUL  偏移，并进入状态 72
    DIV  偏移，并进入状态 73
    MOD  偏移，并进入状态 74


状态 146

   43 io_stmt: PRINTF LP STRING COMMA expr RP .

    $default  使用规则 43 以归约 (io_stmt)


状态 147

    1 statements: MAIN LP RP LB statements RB .

    $default  使用规则 1 以归约 (statements)


状态 148

   27 if_stmt: IF LP expr RP block ELSE block .

    $default  使用规则 27 以归约 (if_stmt)


状态 149

   29 if_stmt: IF LP expr RP block ELSE if_stmt .

    $default  使用规则 29 以归约 (if_stmt)


状态 150

   36 for_stmt: FOR LP SEMICOLON SEMICOLON statement RP block .

    $default  使用规则 36 以归约 (for_stmt)


状态 151

   35 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP block .

    $default  使用规则 35 以归约 (for_stmt)


状态 152

   31 for_stmt: FOR LP SEMICOLON expr SEMICOLON statement RP . block

    LB  偏移，并进入状态 15

    block  转到状态 159


状态 153

   34 for_stmt: FOR LP decl_stmt SEMICOLON SEMICOLON RP block .

    $default  使用规则 34 以归约 (for_stmt)


状态 154

   32 for_stmt: FOR LP decl_stmt SEMICOLON SEMICOLON statement RP . block

    LB  偏移，并进入状态 15

    block  转到状态 160


状态 155

   33 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON RP . block

    LB  偏移，并进入状态 15

    block  转到状态 161


状态 156

   30 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON statement . RP block

    RP  偏移，并进入状态 162


状态 157

   48 io_stmt: SCANF LP STRING COMMA ADDR expr RP .

    $default  使用规则 48 以归约 (io_stmt)


状态 158

   44 io_stmt: PRINTF LP STRING COMMA ADDR expr RP .

    $default  使用规则 44 以归约 (io_stmt)


状态 159

   31 for_stmt: FOR LP SEMICOLON expr SEMICOLON statement RP block .

    $default  使用规则 31 以归约 (for_stmt)


状态 160

   32 for_stmt: FOR LP decl_stmt SEMICOLON SEMICOLON statement RP block .

    $default  使用规则 32 以归约 (for_stmt)


状态 161

   33 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON RP block .

    $default  使用规则 33 以归约 (for_stmt)


状态 162

   30 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON statement RP . block

    LB  偏移，并进入状态 15

    block  转到状态 163


状态 163

   30 for_stmt: FOR LP decl_stmt SEMICOLON expr SEMICOLON statement RP block .

    $default  使用规则 30 以归约 (for_stmt)
